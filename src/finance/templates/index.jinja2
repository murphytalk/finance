{% extends "portfolio.jinja2" %}

{% block content %}
    <div class="row top5 ">
        <h2 class="mx-auto top5">Overview</h2>
    </div>
    <div class="row top5 bottom5">
        <div class="col-md-12">
            <table class="table table-hover" id="overview">
                <thead>
                <tr>
                    <th rowspan="2" class="text-left`">Type</th>
                    <th rowspan="2" class="text-left">CCY</th>
                    <th colspan="2" class="text-right">Market Value</th>
                    <th colspan="2" class="text-right">Profit</th>
                </tr>
                <tr>
                    <th class="text-right">CCY</th>
                    <th class="text-right">JPY</th>
                    <th class="text-right">CCY</th>
                    <th class="text-right">JPY</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th class="text-right">
                        <div id="value_jpy"></div>
                    </th>
                    <th></th>
                    <th class="text-right">
                        <div id="profit_jpy"></div>
                    </th>
                </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h2 class="text-center">Wealth Allocations</h2>
            <ul id="tab1" class="nav nav-tabs" role="tablist">
                <li class="nav-item"><a class="nav-link active" id="asset-tab" data-toggle="tab" href="#asset" role="tab" aria-controls="asset" aria-selected="true">Asset</a></li>
                <li class="nav-item"><a class="nav-link" id="region-tab" data-toggle="tab" href="#region" role="tab" aria-controls="region" aria-selected="false">Region</a></li>
                <li class="nav-item"><a class="nav-link" id="country-tab" data-toggle="tab" href="#country" role="tab" aria-controls="country" aria-selected="false">Country</a></li>
            </ul>
            <div class="tab-content" id="tab1Content">
                <div id="asset" class="tab-pane fade show active" role="tabpanel" aria-labelledby="asset-tab">
                    <div id="pieAsset" class="text-center"></div>
                </div>
                <div id="region" class="tab-pane fade" role="tabpanel" aria-labelledby="region-tab">
                    <div id="pieRegion"></div>
                </div>
                <div id="country" class="tab-pane fade" role="tabpanel" aria-labelledby="country-tab">
                    <div id="pieCountry"></div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="text-center">Instrument Allocations</h2>
            <ul id="tab2" class="nav nav-tabs" role="tablist">
                <li class="nav-item"><a class="nav-link active" id="stock-tab" data-toggle="tab" href="#stock" role="tab" aria-controls="stock" aria-selected="true">Stock/ETF</a></li>
                <li class="nav-item"><a class="nav-link" id="fund-tab" data-toggle="tab" href="#fund" role="tab" aria-controls="fund" aria-selected="false">Mutual Funds</a></li>
            </ul>
            <div class="tab-content" id="tab2Content">
                <div id="stock" class="tab-pane fade show active" role="tabpanel" aria-labelledby="stock-tab">
                    <div id="pieStock" class="text-center"></div>
                </div>
                <div id="fund" class="tab-pane fade" role="tabpanel" aria-labelledby="fund-tab">
                    <div id="pieFund"></div>
                </div>
            </div>
        </div>
    </div>
    {{ super() }}


{% endblock %}

{% block scripts %}
    {{ super() }}
    <script type="text/javascript" src="/static/finance/scripts/chart.js"></script>
    <script type="text/javascript">
        var the_sum_data;
        const instrument_types = ['ETF', 'Stock', 'Funds'];
        var the_portfolios = {};

        function to_chart_data_array(chart_data){
            var ret = [];
            $.each(chart_data,function(n,v){
                ret.push(v);
            });
            return ret;
        }

        /*
        see /finance/api/report/positions for position structure
         */
        function filter_by_allocation(chart_data, portfolio, positions, allocation_name){
            var allocation_collection = allocation_name + '_allocation';
            $.each(positions, function(idx,position){
                var shares = apply_portfolio(portfolio, position)['shares'];
                if(shares>0){
                    $.each(position[allocation_collection],function(idx,allocation){
                        var ratio = allocation['ratio']/100.0;
                        var value = shares*position['price']*ratio*position['xccy'];
                        if(allocation[allocation_name] in chart_data){
                            chart_data[allocation[allocation_name]]['y'] += value;
                        }
                        else{
                            chart_data[allocation[allocation_name]] = {name:allocation[allocation_name],y:value};
                        }
                    });
                }
            });
        }

        function calc_overview(portfolio, instrument_type, positions) {
            //see /finance_demo/api/report/positions
            var sum = {};
            var rows = [];
            $.each(positions, function(idx,position){
                const new_pos = apply_portfolio(portfolio, position);
                const shares  = new_pos['shares'];
                const capital = new_pos['capital'];
                if(shares>0) {
                    var value = shares*position['price'];
                    var base_ccy_value = value*position['xccy'];
                    var profit_ccy = value - capital;
                    var profit = profit_ccy * position['xccy'];
                    var ccy = position['ccy'];
                    if (ccy in sum) {
                        sum[ccy]['value'] += value;
                        sum[ccy]['base_ccy_value'] += base_ccy_value;
                        sum[ccy]['profit_ccy'] += profit_ccy;
                        sum[ccy]['profit'] += profit;
                    }
                    else {
                        sum[ccy] = {value: value, base_ccy_value: base_ccy_value, profit_ccy: profit_ccy, profit: profit};
                    }
                }
            });
            $.each(sum, function (n, v) {
                rows.push([instrument_type, n, v['value'], v['base_ccy_value'], v['profit_ccy'], v['profit']]);
            });
            return rows;
        }

        function portfolio_btn_clicked() {
            on_portfolio_btn_clicked(this);
            var portfolio = the_portfolios[get_active_portfolio()];
            $.each(portfolio, function (name, alloc){
                // shares might have been adjusted, restore the original value
                alloc['shares'] = alloc['original_shares'];
                alloc['market_value'] = alloc['original_market_value'];
                alloc['current_allocation'] = alloc['original_current_allocation'];
            });
            refresh(the_sum_data, portfolio);
            populate_portfolio_adjustment_inputs(portfolio);
        }

       function populate_portfolio_adjustment_inputs(portfolio){
            // inputs to adjust portfolio allocations 
            /// remove the old ones
             $("#rebalance_inputs").children('label').remove();
             $("#rebalance_inputs").children('input').remove();
            /// populate the new ones
            $.each(portfolio, function(instrument_name, alloc){
                const instrument_share = 
                format('<label class="mb-2 mr-sm-2">%%</label><label id="delta_%%" class="mb-2 mr-sm-2"></label><input type="number" min="1" class="form-control mb-2 mr-sm-2" id="%%" placeholder="%%">',
                    instrument_name, instrument_name, instrument_name, alloc['shares']
                );
                $(instrument_share).insertBefore(rebalance_btn);
                $('#'.concat(instrument_name)).change(function (){portfolio_alloc_changed(this.id, this.value);});
            });
            $('<label id="rebalance_adjust_total" class="mb-2 mr-sm-2"></label>').insertBefore(rebalance_btn);
        }

        function draw_portfolio_bars(portfolio){
            var instruments = [];
            var chart_data = [
                {name: "Current", data: []}, // percentage for each instrument
                {name: "Target", data: []}
            ]; 
            $.each(portfolio, function(instrument, alloc){
                instruments.push(instrument);
                chart_data[0]['data'].push(alloc['current_allocation']);
                chart_data[1]['data'].push(alloc['target_allocation']);
            });
            //console.log(instruments);
            //console.log(chart_data);
            $('#barPortfolio').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Portfolio Allocation: Current vs Target'
                },
                xAxis: {
                    categories: instruments,
                    crosshair: true
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Allocation (%)'
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                 '<td style="padding:0"><b>{point.y:.1f} %</b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series: chart_data  
            });
        }

        function portfolio_alloc_changed(instrument_name, shares){
            function format_buy_sell(value, formatter){
                return value == 0 ? '' : format("%% %%", value < 0 ? "Sell" : "Buy", formatter(Math.abs(value)));
            }

            function toggle_share_value(label_id, value){
                if (value < 0){
                    $(label_id).addClass('text-danger');
                    $(label_id).removeClass('text-success');
                }
                else{
                    $(label_id).removeClass('text-danger');
                    $(label_id).addClass('text-success');
                }
            }
            var portfolio = the_portfolios[get_active_portfolio()];
            const delta_shares = shares - portfolio[instrument_name]['original_shares'];
            portfolio[instrument_name]['shares']  = shares;

            var total_value = 0;
            var adjust_value = 0;
            $.each(portfolio, function(name, alloc){
                var value = alloc['shares'] * alloc['price'];
                alloc['market_value'] = value;
                total_value += value;
                if (name.localeCompare(instrument_name) == 0){
                    const delta_id = '#delta_'.concat(instrument_name);
                    const new_shares = delta_shares == 0 ? '' : format("(%%)", format_buy_sell(delta_shares, function (value) {return value.toFixed(0);}));
                    $(delta_id).text(new_shares);
                    toggle_share_value(delta_id, delta_shares);
               }
                adjust_value += (alloc["shares"] - alloc["original_shares"]) * alloc['price'];
            }); 
            $.each(portfolio, function(name, alloc){
                alloc['current_allocation'] = 100 * alloc['market_value'] / total_value; 
            }); 
            $('#rebalance_adjust_total').text(format_buy_sell(adjust_value, function (value) {return format_num(value);}));
            toggle_share_value('#rebalance_adjust_total', adjust_value);
            draw_portfolio_bars(portfolio);
        }

         function refresh(data, portfolio) {
            var country_allocation = {};
            var region_allocation = {};
            var asset_allocation = {};
    
            var stocks = [];
            var funds = [];
            var overview_data = [];
    
            $.each(instrument_types, function(idx, t){
                filter_by_allocation(country_allocation,portfolio,data[t],'country');
                filter_by_allocation(region_allocation,portfolio,data[t],'region');
                filter_by_allocation(asset_allocation,portfolio,data[t],'asset');
    
                $.each(data[t], function(idx,position) {
                    var shares = apply_portfolio(portfolio, position)['shares'];
                    if(shares>0){
                        var value = shares*position['price']*position['xccy'];
                        var chart_data = {'y': value, 'name': position['instrument']['name']};
                        if (t === "Funds") {
                            funds.push(chart_data);
                        }
                        else {
                            //Stock and ETF
                            stocks.push(chart_data);
                        }
                    }
                });
    
                overview_data = overview_data.concat(calc_overview(portfolio,t, data[t]));
            });
    
            //Cash balance
            var cash = {}
            $.each(data['Cash'],function(idx,balance){
                if(balance['ccy'] in cash){
                    cash[balance['ccy']][0] += balance['balance']
                    cash[balance['ccy']][1] += balance['balance']*balance['xccy']
                }
                else{
                    cash[balance['ccy']] = [balance['balance'], balance['balance']*balance['xccy']]
                }
            });
            $.each(cash,function(ccy,balance){
                overview_data.push(['Cash',ccy,balance[0],balance[1],0,0]);
            });
    
            $('#pieCountry').highcharts(pieChartOptions(null, 'Market Value', to_chart_data_array(country_allocation), false));
            $('#pieRegion').highcharts(pieChartOptions(null, 'Market Value', to_chart_data_array(region_allocation), false));
            $('#pieAsset').highcharts(pieChartOptions(null, 'Market Value', to_chart_data_array(asset_allocation), false));
    
            $('#pieStock').highcharts(pieChartOptions(null, 'Market Value', stocks, false));
            $('#pieFund').highcharts(pieChartOptions(null, 'Market Value', funds, false));
    
            if (portfolio==null){
                $("#portfolio-bars").hide();
            }
            else{
                $("#portfolio-bars").show();
                draw_portfolio_bars(portfolio);
           }
    
            if ($.fn.dataTable.isDataTable('#overview')) {
                table = $('#overview').DataTable();
                table.destroy();
            }
            //populate overview table
            const cols = [2, 3, 4, 5];
            var overview_table = populate_data(
                    '#overview',
                    function (d, callback, s) {
                        callback({
                            'data': overview_data
                        });
                    },
                    null,
                    100,
                    null,
                    [
                        {
                            "render": function (data, type, row) {
                                if(data===0){
                                    return ""
                                }
                                else return format_num(data);
                            }, 
                            "targets": cols
                        },
                        {"className": "text-right", "targets": cols},
                    ],
                    null,
                    {
                        bLengthChange: false,
                        paging: false,
                        searching: false,
                        info: false
                    }
            );
    
            var total_value  = 0;
            var total_profit = 0;
            $.each(overview_data, function(i,v){
                total_value += v[3];
                total_profit+= v[5];
            });
    
            update_sum(overview_table, '¥', 3, total_value, '#value_jpy');
            update_sum(overview_table, '¥', 5, total_profit, '#profit_jpy');
    
       }
    
        $(document).ready(function () {
            $.getJSON("{{ url_for('api.report_positions')}}",
                    function (data) {
                        the_sum_data = data;
    
                        //reflow chart when its host tab is shown, otherwise the chart won't position itself at center
                        $('.nav-tabs a').on('shown.bs.tab', function (event) {
                            var x = $(event.target).text();         // active tab
                            var chart_selector;
                            if (x == 'Asset') {
                                chart_selector = "#pieAsset";
                            }
                            else if (x == 'Region') {
                                chart_selector = "#pieRegion";
                            }
                            else if (x == 'Country') {
                                chart_selector = "#pieCountry";
                            }
                            else if (x == 'Stock/ETF') {
                                chart_selector = "#pieStock";
                            }
                            else {
                                chart_selector = "#pieFund";
                            }
                            var chart = $(chart_selector).highcharts();
                            chart.reflow();
                        });
    
                        $("#portfolio-All").click(portfolio_btn_clicked);
                        populate_portfolios("{{ url_for('api.report_portfolios') }}",function(portfolios){
                            // {portfolio name: {instrument: allocation}}, transformed from finance/api/report/portfolios
                            the_portfolios = portfolios; 
                            refresh(data,the_portfolios[get_active_portfolio()]);
                            //if any of the 2 show below is missing, the chart won't flow
                            $('.nav-tabs').tab("show");
                            $('#tab1 a[href="#asset"]').tab("show");
                            $('#tab2 a[href="#stock"]').tab("show");
                         });
                  });
        });
    </script>
{% endblock %}
